#-*-encoding=utf-8-*-
1. 算法设计：设计一个栈，要求push、pop、max、min四个接口的时间复杂度为O(1).
2. 算法设计：字符串的子串替换，要求不能使用字符串函数. char *str_replace(char *src, const char *from, const char *to);
3. C++：谈谈对面向对象编程的认识(q3) 封装、继承、多态
4. 算法设计：数据库1中存放a类数据，数据库2存放着以天为单位划分的表30张（如table_20110909, table_20110910），总共是一个月的数据，
   数据库1中的a类数据中有一个字段userid来判别唯一用户身份，数据库2中的30张表（每张表结构相同）也有一个字段userid来唯一
   识别用户，如何判定a类数据库的多少用户在数据库2中出现？
5. C++：实现单例模型，要求实现多线程且高性能
6. C++：父类为单例方式定义时，那么它的子类会有什么特征？
7. C++：虚函数/虚继承的技术的缘由是什么，功能是什么？
8. C：volatile的作用以及举例说明
9. C++：map的使用问题。
	map<char *, int> users;
	char *name = "hh";
	char *p = NULL;
	users[name] = 123;
	cout << users[name] << endl;
	p = strdup(name);
	cout << users[p] << endl;
请问cout的输出是什么，为什么？	
10. 操作系统：解释Linux中的线程的本质，超线程概念
11. C++：引用和指针的区别
12. C++：typename的作用是什么
13. 操作系统：共享内存的实现机制、使用方法以及一些注意事项
14. 操作系统：Linux进程的机制、实现方式;子进程与父进程的数据共享方式;僵尸进程怎么产生的，如何避免
15. 操作系统：解释虚拟内存的机制
16. 数据结构：红黑树的原理，实现一个红黑树的创建、插入、删除以及查找
17. 数据结构：解释哈希的原理、冲突解决方案及各自的优缺点
18. 排序算法：解释插入排序、希尔排序、基数排序、桶排序、堆排序、快速排序、归并排序的原理、时空复杂度以及适用场景，并用代码实现
19. 查找算法：解释顺序查找、折半查找、二叉树查找、哈希查找的原理、时空复杂度以及适用场景，并用代码实现
20. 操作系统：解释mmap的原理、优缺点及使用场景
21. 网络/协议：描述OSI 7层模型以及tcp/ip 4层模型
22. 算法/加密：解释https/ssl加密流程以及漏洞
23. 网络/安全：简述arp协议、工作流程以及其安全漏洞
24. 网络/安全：简述sniffer的工作原理
25. 网络/安全：简述nmap的工作原理、使用方法以及应用实例
26. 网络/协议：简述tcp与udp的区别
27. 网络/协议：简述tcp的状态转换图
28. 网络/协议：简述ipv6协议（地址格式、编码、协议格式、ipv4共存方案、路由、与ipv4比较的优缺点）
29. 数据库/mysql：简述创建数据库、库表以及增/删/改记录的语句
30. 数据库/mysql：简述mysql的架构
31. 数据库/mysql：简述数据库优化的方案
32. 版本管理/svn：简述svn常用的命令及使用场景
33. 版本管理/git：简述git常用的命令及使用场景
34. 版本管理：简述版本管理方式（trunk、branch、tag的使用）
35. 语言/python：list的实现方式是什么，举例说明如何高效使用list
    一个list对象a = [1, 2, 3]，使用del a[0]与a = a[1:]的区别是什么？
36. 数据结构/算法：对于linux/unix的树形文件系统，请写出遍历文件系统和统计每个文件的大小的代码（先序遍历及后序遍历）
37. 数据结构/算法：用树实现一个计算器
38. 语言/汇编：当要对一个寄存器清零时，有两种方案,movl $0, %eax和xor %eax,%eax，请问哪种方法更佳？
39. 网络/协议：如何设计通过tcp/udp大数据/大文件的传输
40. 语言/C++：定义一个template的类
template <class Type> Test {
public:
	Test();
	~Test();
private:
	static Test<Type> *p;
	static int i;
	Type _x, _y;
}
int main() {return 0;} 这种情况下编译、运行时Test起到什么作用，它的各个成员会怎么样？
int main() {Test<int> test; return 0;} 这种情况下编译、运行时Test起到什么作用，它的各个成员会怎么样？

